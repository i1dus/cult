syntax = "proto3";

package api;

option go_package = "internal/pb/parking_lot;parking_lot";

import "google/api/annotations.proto";

service ParkingAPI {
  rpc GetParkingLot (GetParkingLotRequest) returns (GetParkingLotResponse) {
    option (google.api.http) = {
      get: "/parking/get"
    };
  };

  rpc ListParkingLots (ListParkingLotsRequest) returns (ListParkingLotsResponse) {
    option (google.api.http) = {
      get: "/parking/list/get"
    };
  };
}

message GetParkingLotRequest {
  int64 number = 1;
}

message GetParkingLotResponse {
  ParkingLot parking_lot = 1;
}

message ListParkingLotsRequest {
  int64 page = 1;
  int64 per_page = 2;
}

message ListParkingLotsResponse {
  repeated ParkingLot parking_lot = 1;
  int64 total = 2;
}

message ParkingLot {
  int64 number = 1;
  ParkingType type = 2;
  ParkingLotStatus status = 3;
  optional Vehicle vehicle = 4;
}

enum ParkingLotStatus {
  AVAILABLE = 0;
  BOOKED = 1;
  BOOKED_BY_ME = 2;
}


enum ParkingType {
  // Неизвестный тип парковочного места
  UNDEFINED = 0;
  // Тип постоянного парковочного места
  PERMANENT = 1;
  // Тип временного парковочного места
  RENT = 2;
  // Тип парковочного места для спец. назначения (скорая, пожарные и т.д.)
  SPECIAL = 3;
  // Тип парковочного места для инвалидов
  INCLUSIVE = 4;
  // etc
}

message Owner {
  // UUID
  string id = 1;
  // Имя
  string name = 2;
  // Фамилия
  string surname = 3;
  // Квартира (todo: уточнить в каком виде)
  string apartment = 4;
}

message Vehicle {
  // UUID
  string id = 1;
  // Гос. номер машины
  string number = 2;
}

