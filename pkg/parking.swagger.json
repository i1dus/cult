{
  "swagger": "2.0",
  "info": {
    "title": "parking.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ParkingAPI"
    },
    {
      "name": "PaymentAPI"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/booking/add": {
      "post": {
        "operationId": "ParkingAPI_AddParkingBooking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAddParkingBookingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAddParkingBookingRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/booking/edit": {
      "post": {
        "operationId": "ParkingAPI_EditParkingBooking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEditParkingBookingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiEditParkingBookingRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/booking/get": {
      "get": {
        "operationId": "ParkingAPI_GetParkingBooking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetParkingBookingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parkingLot",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/booking/list": {
      "get": {
        "operationId": "ParkingAPI_GetParkingBookingsList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetParkingBookingsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filter.ownerId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.timeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.timeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.vehicles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "limit",
            "description": "opt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "opt",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/booking/vehicle/change": {
      "post": {
        "operationId": "ParkingAPI_UpdateBookingVehicle",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUpdateBookingVehicleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateBookingVehicleRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/my/parking/list": {
      "get": {
        "operationId": "ParkingAPI_GetMyParkingLots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetMyParkingLotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filter.ownerId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.timeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.timeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.vehicles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/parking/get": {
      "get": {
        "summary": "Получение парковочного места по его числу",
        "operationId": "ParkingAPI_GetParkingLot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetParkingLotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/parking/get_by_user_id": {
      "get": {
        "summary": "Получение парковочного места по client id (owner id)",
        "operationId": "ParkingAPI_GetParkingLotsByUserID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetParkingLotsByUserIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/parking/list": {
      "get": {
        "summary": "Получение всех парковочных мест для отрисовки карты",
        "operationId": "ParkingAPI_ListParkingLots",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListParkingLotsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/parking/update": {
      "post": {
        "operationId": "ParkingAPI_UpdateParkingLot",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUpdateParkingLotResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateParkingLotRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/payment/callback": {
      "post": {
        "summary": "Process payment callback from payment provider",
        "operationId": "PaymentAPI_PaymentCallback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiPaymentCallbackResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiPaymentCallbackRequest"
            }
          }
        ],
        "tags": [
          "PaymentAPI"
        ]
      }
    },
    "/payment/create": {
      "post": {
        "summary": "Create a payment for a booking",
        "operationId": "PaymentAPI_CreatePayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreatePaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreatePaymentRequest"
            }
          }
        ],
        "tags": [
          "PaymentAPI"
        ]
      }
    },
    "/payment/history": {
      "get": {
        "summary": "Get payment history for user",
        "operationId": "PaymentAPI_GetPaymentHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetPaymentHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PaymentAPI"
        ]
      }
    },
    "/payment/refund": {
      "post": {
        "summary": "Refund payment",
        "operationId": "PaymentAPI_RefundPayment",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiRefundPaymentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiRefundPaymentRequest"
            }
          }
        ],
        "tags": [
          "PaymentAPI"
        ]
      }
    },
    "/payment/status": {
      "get": {
        "summary": "Get payment status",
        "operationId": "PaymentAPI_GetPaymentStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetPaymentStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "paymentId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PaymentAPI"
        ]
      }
    },
    "/rental/add": {
      "post": {
        "operationId": "ParkingAPI_AddRental",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAddRentalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAddRentalRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/rental/get": {
      "get": {
        "operationId": "ParkingAPI_GetRental",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetRentalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "parkingLot",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/rentals/get": {
      "get": {
        "operationId": "ParkingAPI_GetRentals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetRentalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "filter.ownerId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.timeFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.timeTo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter.vehicles",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/sso/login": {
      "post": {
        "operationId": "ParkingAPI_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiLoginRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/sso/register": {
      "post": {
        "operationId": "ParkingAPI_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiRegisterRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/user/get": {
      "get": {
        "operationId": "ParkingAPI_GetUserByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetUserByIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/user/get_by_phone": {
      "get": {
        "operationId": "ParkingAPI_GetUserByPhoneNumber",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetUserByPhoneNumberResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "phoneNumber",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    },
    "/user/update": {
      "post": {
        "operationId": "ParkingAPI_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "ParkingAPI"
        ]
      }
    }
  },
  "definitions": {
    "apiAddParkingBookingRequest": {
      "type": "object",
      "properties": {
        "booking": {
          "$ref": "#/definitions/apiParkingBooking"
        }
      },
      "required": [
        "booking"
      ]
    },
    "apiAddParkingBookingResponse": {
      "type": "object",
      "properties": {
        "parkingLot": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiAddRentalRequest": {
      "type": "object",
      "properties": {
        "rental": {
          "$ref": "#/definitions/apiRental"
        }
      }
    },
    "apiAddRentalResponse": {
      "type": "object",
      "properties": {
        "parkingLotId": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiCreatePaymentRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "bookingId": {
          "type": "string",
          "title": "For parking bookings"
        },
        "rentalId": {
          "type": "string",
          "title": "For rentals"
        },
        "paymentAmount": {
          "type": "string",
          "format": "int64"
        },
        "paymentMethod": {
          "$ref": "#/definitions/apiPaymentMethod"
        }
      },
      "title": "Payment messages",
      "required": [
        "userId",
        "paymentMethod"
      ]
    },
    "apiCreatePaymentResponse": {
      "type": "object",
      "properties": {
        "paymentId": {
          "type": "string"
        },
        "paymentUrl": {
          "type": "string",
          "title": "For redirect to payment provider"
        },
        "status": {
          "$ref": "#/definitions/apiPaymentStatus"
        }
      }
    },
    "apiEditParkingBookingRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "bookingId": {
          "type": "string"
        },
        "timeTo": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "bookingId",
        "timeTo"
      ]
    },
    "apiEditParkingBookingResponse": {
      "type": "object",
      "properties": {
        "timeTo": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "timeTo"
      ]
    },
    "apiFilter": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string"
        },
        "timeFrom": {
          "type": "string",
          "format": "date-time"
        },
        "timeTo": {
          "type": "string",
          "format": "date-time"
        },
        "vehicles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "ownerId"
      ]
    },
    "apiGetMyParkingLotsResponse": {
      "type": "object",
      "properties": {
        "bookings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiParkingBooking"
          }
        },
        "rentals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRental"
          }
        },
        "parkingLots": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiParkingLot"
          }
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiGetParkingBookingResponse": {
      "type": "object",
      "properties": {
        "booking": {
          "$ref": "#/definitions/apiParkingBooking"
        }
      }
    },
    "apiGetParkingBookingsListResponse": {
      "type": "object",
      "properties": {
        "bookings": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiParkingBooking"
          }
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiGetParkingLotResponse": {
      "type": "object",
      "properties": {
        "parkingLot": {
          "$ref": "#/definitions/apiParkingLot"
        }
      }
    },
    "apiGetParkingLotsByUserIDResponse": {
      "type": "object",
      "properties": {
        "parkingLot": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiParkingLot"
          }
        }
      }
    },
    "apiGetPaymentHistoryResponse": {
      "type": "object",
      "properties": {
        "payments": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiPaymentHistoryItem"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "apiGetPaymentStatusResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/apiPaymentStatus"
        },
        "paymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "apiGetRentalResponse": {
      "type": "object",
      "properties": {
        "rental": {
          "$ref": "#/definitions/apiRental"
        }
      }
    },
    "apiGetRentalsResponse": {
      "type": "object",
      "properties": {
        "rentals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiRental"
          }
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiGetUserByIDResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/apiUser"
        }
      }
    },
    "apiGetUserByPhoneNumberResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/apiUser"
        }
      }
    },
    "apiListParkingLotsResponse": {
      "type": "object",
      "properties": {
        "parkingLot": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiParkingLot"
          }
        },
        "total": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "apiLoginRequest": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "title": "Номер телефона"
        },
        "password": {
          "type": "string",
          "title": "Пароль"
        }
      }
    },
    "apiLoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "title": "Авторизационный токен"
        },
        "userID": {
          "type": "string",
          "title": "ID пользователя в виде UUID"
        }
      }
    },
    "apiParkingBooking": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "parkingLot": {
          "type": "string",
          "format": "int64"
        },
        "vehicle": {
          "type": "string"
        },
        "timeFrom": {
          "type": "string",
          "format": "date-time"
        },
        "timeTo": {
          "type": "string",
          "format": "date-time"
        },
        "bookingId": {
          "type": "string"
        }
      },
      "required": [
        "vehicle",
        "timeFrom",
        "timeTo"
      ]
    },
    "apiParkingKind": {
      "type": "string",
      "enum": [
        "UNDEFINED_PARKING_KIND",
        "REGULAR_PARKING_KIND",
        "SPECIAL_PARKING_KIND",
        "INCLUSIVE_PARKING_KIND"
      ],
      "default": "UNDEFINED_PARKING_KIND"
    },
    "apiParkingLot": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "format": "int64",
          "title": "Номер парковочного места"
        },
        "kind": {
          "$ref": "#/definitions/apiParkingKind",
          "title": "Вид парковочного места (обычное, спец., ОВЗ)"
        },
        "type": {
          "$ref": "#/definitions/apiParkingType",
          "title": "Занятость парковочного места"
        },
        "status": {
          "$ref": "#/definitions/apiParkingLotStatus",
          "title": "Статус парковочного места"
        },
        "vehicle": {
          "type": "string",
          "title": "Гос. номер машины на парковочном месте"
        },
        "ownerId": {
          "type": "string",
          "title": "Владелец парковочного места"
        }
      }
    },
    "apiParkingLotStatus": {
      "type": "string",
      "enum": [
        "UNDEFINED_PARKING_LOT_STATUS",
        "FREE_PARKING_LOT_STATUS",
        "BUSY_PARKING_LOT_STATUS",
        "MINE_PARKING_LOT_STATUS",
        "EXPIRED_PARKING_LOT_STATUS"
      ],
      "default": "UNDEFINED_PARKING_LOT_STATUS"
    },
    "apiParkingType": {
      "type": "string",
      "enum": [
        "UNDEFINED_PARKING_TYPE",
        "OWNED_PARKING_TYPE",
        "LONG_TERM_RENT_BY_ME_PARKING_TYPE",
        "SHORT_TERM_RENT_BY_ME_PARKING_TYPE",
        "LONG_TERM_RENT_BY_OTHER_PARKING_TYPE",
        "SHORT_TERM_RENT_BY_OTHER_PARKING_TYPE"
      ],
      "default": "UNDEFINED_PARKING_TYPE"
    },
    "apiPaymentCallbackRequest": {
      "type": "object",
      "properties": {
        "paymentId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/apiPaymentStatus"
        },
        "signature": {
          "type": "string",
          "title": "For verification"
        }
      }
    },
    "apiPaymentCallbackResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "apiPaymentHistoryItem": {
      "type": "object",
      "properties": {
        "paymentId": {
          "type": "string"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "currency": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/apiPaymentStatus"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "bookingId": {
          "type": "string"
        },
        "rentalId": {
          "type": "string"
        },
        "paymentMethod": {
          "$ref": "#/definitions/apiPaymentMethod"
        }
      },
      "title": "Payment data structures"
    },
    "apiPaymentMethod": {
      "type": "string",
      "enum": [
        "UNDEFINED_PAYMENT_METHOD",
        "CREDIT_CARD",
        "BANK_TRANSFER",
        "MOBILE_PAYMENT",
        "ELECTRONIC_WALLET"
      ],
      "default": "UNDEFINED_PAYMENT_METHOD"
    },
    "apiPaymentStatus": {
      "type": "string",
      "enum": [
        "UNDEFINED_PAYMENT_STATUS",
        "PENDING",
        "PROCESSING",
        "COMPLETED",
        "FAILED",
        "REFUNDED",
        "PARTIALLY_REFUNDED",
        "CANCELLED"
      ],
      "default": "UNDEFINED_PAYMENT_STATUS"
    },
    "apiRefundPaymentRequest": {
      "type": "object",
      "properties": {
        "paymentId": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "required": [
        "paymentId"
      ]
    },
    "apiRefundPaymentResponse": {
      "type": "object",
      "properties": {
        "refundId": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/apiPaymentStatus"
        }
      }
    },
    "apiRegisterRequest": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "title": "Номер телефона"
        },
        "password": {
          "type": "string",
          "title": "Пароль"
        }
      }
    },
    "apiRegisterResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "title": "ID пользователя в формате UUID"
        }
      }
    },
    "apiRental": {
      "type": "object",
      "properties": {
        "rentalId": {
          "type": "string"
        },
        "parkingLot": {
          "type": "string",
          "format": "int64"
        },
        "timeFrom": {
          "type": "string",
          "format": "date-time"
        },
        "timeTo": {
          "type": "string",
          "format": "date-time"
        },
        "costPerHour": {
          "type": "string",
          "format": "int64"
        },
        "costPerDay": {
          "type": "string",
          "format": "int64"
        }
      },
      "required": [
        "timeFrom",
        "timeTo"
      ]
    },
    "apiUpdateBookingVehicleRequest": {
      "type": "object",
      "properties": {
        "bookingId": {
          "type": "string",
          "title": "ID занятости"
        },
        "vehicle": {
          "type": "string",
          "title": "Гос. номер"
        }
      },
      "required": [
        "vehicle"
      ]
    },
    "apiUpdateBookingVehicleResponse": {
      "type": "object"
    },
    "apiUpdateParkingLotRequest": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "$ref": "#/definitions/apiParkingKind",
          "title": "Тип парковочного места: обычное, для лиц с ОВЗ, спец. назначения"
        },
        "ownerId": {
          "type": "string",
          "title": "Владелец парковочного места. UUID"
        },
        "ownerVehicle": {
          "type": "string",
          "title": "Гос. номер Т/С"
        }
      }
    },
    "apiUpdateParkingLotResponse": {
      "type": "object"
    },
    "apiUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "UUID клиента у которого изменить данные"
        },
        "name": {
          "type": "string",
          "title": "Имя"
        },
        "surname": {
          "type": "string",
          "title": "Фамилия"
        },
        "patronymic": {
          "type": "string",
          "title": "Отчество"
        },
        "phoneNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "apiUpdateUserResponse": {
      "type": "object"
    },
    "apiUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "UUID"
        },
        "name": {
          "type": "string",
          "title": "Имя"
        },
        "surname": {
          "type": "string",
          "title": "Фамилия"
        },
        "patronymic": {
          "type": "string",
          "title": "Отчество"
        },
        "phoneNumber": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "userType": {
          "$ref": "#/definitions/apiUserType",
          "title": "Тип пользователя"
        }
      }
    },
    "apiUserType": {
      "type": "string",
      "enum": [
        "UNDEFINED_USER_TYPE",
        "REGULAR_USER_TYPE",
        "MANAGING_COMPANY_USER_TYPE",
        "ADMINISTRATOR_USER_TYPE"
      ],
      "default": "UNDEFINED_USER_TYPE",
      "title": "- UNDEFINED_USER_TYPE: Неизвестный\n - REGULAR_USER_TYPE: Обычный пользователь (Владелец+Арендатор)\n - MANAGING_COMPANY_USER_TYPE: Управляющая компания\n - ADMINISTRATOR_USER_TYPE: Администратор"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
